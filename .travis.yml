language: rust
cache: cargo
matrix:
  # allow_failures:
  #   - rust: nightly
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-musl
    - os: linux
      rust: stable
      env:
        - TARGET=arm-unknown-linux-gnueabihf
        - CC_arm_unknown_linux_gnueabihf=/usr/bin/arm-linux-gnueabihf-gcc-4.8
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8
    - os: linux
      rust: stable
      env:
        - TARGET=arm-unknown-linux-musleabihf
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_MUSLEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8

    # Minimum Rust supported channel.
    - os: linux
      rust: 1.31.0
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: 1.31.0
      env: TARGET=x86_64-unknown-linux-musl
    - os: linux
      rust: 1.31.0
      env: TARGET=i686-unknown-linux-gnu
    - os: linux
      rust: 1.31.0
      env: TARGET=i686-unknown-linux-musl

    # Code formatting check
    # - os: linux
    #   rust: nightly
    #   # skip the global install step
    #   install:
    #     - cargo install --debug --force rustfmt-nightly
    #   script: cargo fmt -- --check

sudo: required

before_install:
  - ci/before_install.sh

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST="x86_64-unknown-linux-gnu"
    # Used on the deployment script
    - PROJECT_NAME="i3-plasma"
    - PROJECT_HOME="https://github.com/acheronfail/i3-plasma"
    - PROJECT_MAINTAINER="Callum Oz <acheronfail@gmail.com>"

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  - ci/script.sh

before_deploy:
  - bash ci/before_deploy.sh

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "Kb0tG7zNzSytGon0d7ZvWcso3V3shuoTVd6I7mv+jgCiZl2NtxL4P8KiHS+EnsJows1NgweZ/tuvfUHKlmdWXNHqpwJhorYRkot3o8cFfuwkQgBWH/gbyAEiq6y/XLtxsWQAVofIq8CEKzShdRb4veoBLlls9BVfVufZayOrSnEXorhTsBECrr7KFGEXnYRM3yTQZcVUw+muFrW1QkEWuzQoUINiuU4SYstrtECf2d31+Bof7NywBFPPJ02KTlPbMJltGeqP4Lj/pkE3QxhxRfbJAkshFH9kvw4moNvhe0kTI2IRmn0LasefsQX2IkCD9tF0GF3E1r0+UVUeD9uvAMa2IuGHy/QdX0OxV6CZMgjz1cKBaWW8SElUbgIdnV3abnOPFxfniI4xgPd+pYsMdeV0j326+vCJ1YXHcmkSgKqA4JMhfVnnEOwFQrArBkX7XQFixk1wbCegqcTuMf+q/V0c3euglB1sGsWQlW8UDkSOQwYEssZyKXNUnhYonotT4SVs1U/2LO3RtcnJe1uMsz5G/QTmiH7pQjIIQ2gOHeYowYJXMM7qBSO9n1M5sf15PxR+d+q2OAeXx+kOChtpOxZFhJaxVa2N9gLXQ3Mq8vqzyW+Bmbz7Yb0bQZvppCGC1tU9GpF5mwLEHcizu+Nn9q54bF6/o4IHNQzv8KDqJOI="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != ""

notifications:
  email:
    on_success: never
